printf \\ec;emacs -nw --no-splash --eval='(help-with-tutorial)'

/C-./ ; controlled commands
/M-./ ; /\e ./ ; /alternative|altered/ commands

C-x C-c ; \e
C-g ; vim \e
C-x k ; kill buffer

SUMMARY

C-v ; page down
M-v ; page up
C-l ; redraw garbage line noise, and cycle /middle|top|bottom/ vertical alignment, but the C-h k C-l does not mention redrawing

BASIC CURSOR CONTROL

; why are they using \t for ascii art‽ this is so stupid …need an ascii art macro that uses tab-width to s/(\s+)/\,(f \1 "\t")/

; Very often Meta characters are used for operations related to the units defined by language (words, sentences, paragraphs), while Control characters operate on basic units that are independent of what you are editing (characters, lines, etc).
C-b ; back char
C-n ; next line
C-p ; prev line
C-f ; fore char
M-b ; back word
M-f ; fore word
C-a ; back \r\n (ReturN) https://stackoverflow.com/a/6539810
C-e ; fore \r\n (ReturN) https://stackoverflow.com/a/6539810
M-a ; back sent
M-e ; fore sent
M-< ; init file (/born|head/ /buff/)
M-> ; stop file (/dead|tail/ /buff/)
; this would be more consistent, and mnemonical
; could /c-(a|z)/ for chars, /(r|n)-(a|z)/ for /\r|\n/, /l-(a|z)/ for lines (/^|$/), /f-(a|z)/ for files (/^|$/), /w-(a|z)/ for words (/\s/), /s-(a|z)/ for sentences (/\.\s/), /p-(a|z)/ for paragraphs (/\n\n/),..
; s/a/s/, s/z/e/, for eof,..
; s/a/h/, s/z/t/, for heads, or tails?
; /l-(a|z)/ twice should jump lines (maybe warn like /C-(s|r)/) …warning with s/(a)n/\1/ sound (awooga awooga awooga)
; scrolling versus paging is just a matter of speed, so in games shifting is usually slower; /(S-)?.-(a|z)/, where that dot is /./ not /\./, since it can be applied to every"-thing", and just have /((C-u)+ \d*)?(S-)?m-(a|z)/, where s/m/move/

; universal-argument
/C-u \d* ./ ; repetition, or ¿temporary? behaviour modification (social engineering)
/M-\d* ./   ; /C-u \d* ./
/(C-u)* ./  ; (λx./C-u 4ˣ ./)

IF EMACS STOPS RESPONDING

C-g ; vim \e

DISABLED COMMANDS

C-x C-l; disabled command

WINDOWS

C-x 1 ; One window (i.e., kill all other windows)
; There is a whole series of commands that start with C-x; many of them have to do with windows, files, buffers, and related things. These commands are two, three or four characters long.

INSERTING AND DELETING

; just type normally to insert; like notepad,..
; i hate the backslash continuation line, and i hate the padded spaces; just print lines normally, and use $WIDTH, and $HEIGHT, (or whatever they're called) for the math; i hate copying text only to discover there is an abundance of space
/\r|\n|\r\n/ ; conductive boogaloo
/C-u \d (\r|\n|\r\n)/ ; is insulated
\b   ; delete-backward-char
C-d  ; delete-char
M-\b ; backward-kill-word
M-d  ; kill-word
C-k  ; kill-line
M-k  ; kill-sentence
C-w  ; kill-region
M-w  ; kill-ring-save (why didn't they include this one?)
C-y  ; yank (reuse clones)
M-y  ; yank-pop (cycles the cyclic kill ring) (depends on /yank(-pop)?/; useful to know for modal hacking)
; text has soul
; killing supports reincarnation (yanked back from the future), but deleting is a matter ∘ antimatter; all can be undone
; Generally, the commands that can remove a lot of text kill the text (they are set up so that you can yank the text), while the commands that remove just one character, or only remove blank lines and spaces, do deletion (so you cannot yank that text).  <DEL> and C-d do deletion in the simplest case, with no argument.  When given an argument, they kill instead.
; Some other editors call killing and yanking "cutting" and "pasting" (see the Glossary in the Emacs manual).
; If you do several C-k's in a row, all of the killed text is saved together, so that one C-y will yank all of the lines at once.
; ^ this means the kill ring is hackable

UNDO

/C-(_|\/|x u)/
; A numeric argument to undo acts as a repeat count; otherwise use it incrementally.
; But there are two exceptions: commands that do not change the text don't count (this includes cursor motion commands and scrolling commands), and self-inserting characters are usually handled in groups of up to 20.  (This is to reduce the number of C-_'s you have to type to undo insertion of text.)
; undo considers both the kill ring, and the delete ring; unlike yanking
; (C-g toggles between undo, and redo; oh, this is still just the tutorial)

FILES

C-x C-f /.+/ ; find-file ;  /(find|visit)(ing)?( a)? file/, the command reads the argument
C-x C-s ; save-buffer ; save the file (¿leaving the file?)

BUFFERS

C-x C-b ; list-buffers ; includes crm, name, size, mode, file
C-x 1 ; delete-other-windows
C-x C-f /.+/ ; switches to file buffers, even if they already exist
C-x b ; switch-to-buffer
C-x s ; save-some-buffers ; doesn't save all buffers (*scratch*, *Messages*, *Help*), but saves modified file-visiting buffers

EXTENDING THE COMMAND SET

printf \\ec;emacs -nw --no-splash --eval='((lambda () (help-with-tutorial) (goto-line 641) (recenter-top-bottom 0)))'